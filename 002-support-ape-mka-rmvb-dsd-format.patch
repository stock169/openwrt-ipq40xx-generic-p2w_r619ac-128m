diff -Naur a/metadata.c b/metadata.c
--- a/metadata.c	2019-12-10 13:34:44.000000000 +0800
+++ b/metadata.c	2020-07-08 14:58:45.508877011 +0800
@@ -338,6 +338,16 @@
 		strcpy(type, "flc");
 		m.mime = strdup("audio/x-flac");
 	}
+	else if( ends_with(path, ".ape") )
+	{
+		strcpy(type, "ape");
+		m.mime = strdup("audio/x-ape");
+	}
+	else if( ends_with(path, ".mka") )
+	{
+		strcpy(type, "mka");
+		m.mime = strdup("audio/x-matroska");
+	}
 	else if( ends_with(path, ".wav") )
 	{
 		strcpy(type, "wav");
@@ -362,6 +372,17 @@
 	{
 		strcpy(type, "dff");
 		m.mime = strdup("audio/x-dsd");
+
+	}
+	else if( ends_with(path, ".dsf") )
+	{
+		strcpy(type, "dsf");
+		m.mime = strdup("audio/x-dsd");
+	}
+	else if( ends_with(path, ".dff") )
+	{
+		strcpy(type, "dff");
+		m.mime = strdup("audio/x-dsd");
 	}
 	else
 	{
@@ -862,6 +883,10 @@
 			xasprintf(&m.mime, "video/x-matroska");
 		else if( strcmp(ctx->iformat->name, "flv") == 0 )
 			xasprintf(&m.mime, "video/x-flv");
+		else if( strcmp(ctx->iformat->name, "rm") == 0 )  
+  			xasprintf(&m.mime, "video/x-pn-realvideo");  
+		else if( strcmp(ctx->iformat->name, "rmvb") == 0 )  
+   			xasprintf(&m.mime, "video/x-pn-realvideo");  
 		if( m.mime )
 			goto video_no_dlna;
 
diff -Naur a/upnpglobalvars.h b/upnpglobalvars.h
--- a/upnpglobalvars.h	2019-12-10 13:34:44.000000000 +0800
+++ b/upnpglobalvars.h	2020-07-08 14:40:26.560487535 +0800
@@ -172,7 +172,11 @@
 	"http-get:*:audio/x-wav:*," \
 	"http-get:*:audio/x-flac:*," \
 	"http-get:*:audio/x-dsd:*," \
-	"http-get:*:application/ogg:*"
+        "http-get:*:audio/x-ape:*," \
+	"http-get:*:audio/x-dsd:*," \
+        "http-get:*:audio/x-matroska:*," \
+	"http-get:*:application/ogg:*" \
+	"http-get:*:video/x-pn-realvideo:*"
 
 #define DLNA_FLAG_DLNA_V1_5      0x00100000
 #define DLNA_FLAG_HTTP_STALLING  0x00200000
diff -Naur a/utils.c b/utils.c
--- a/utils.c	2019-12-10 13:34:44.000000000 +0800
+++ b/utils.c	2020-07-08 15:13:49.933889669 +0800
@@ -339,6 +339,10 @@
 				return "flac";
 			else if( strcmp(mime+6, "flac") == 0 )
 				return "flac";
+			else if( strcmp(mime+6, "x-ape") == 0 )
+				return "ape";
+			else if( strcmp(mime+6, "x-matroska") == 0 )
+				return "mka";
 			else if( strcmp(mime+6, "x-wav") == 0 )
 				return "wav";
 			else if( strncmp(mime+6, "L16", 3) == 0 )
@@ -369,6 +373,8 @@
 				return "mkv";
 			else if( strcmp(mime+6, "x-flv") == 0 )
 				return "flv";
+			else if( strcmp(mime+6, "x-pn-realvideo") == 0 )
+				return "rm";
 			else if( strcmp(mime+6, "vnd.dlna.mpeg-tts") == 0 )
 				return "mpg";
 			else if( strcmp(mime+6, "quicktime") == 0 )
@@ -401,6 +407,7 @@
 		ends_with(file, ".m2t") || ends_with(file, ".mkv")   ||
 		ends_with(file, ".vob") || ends_with(file, ".ts")    ||
 		ends_with(file, ".flv") || ends_with(file, ".xvid")  ||
+		ends_with(file, ".rm")  || ends_with(file, ".rmvb")  ||
 #ifdef TIVO_SUPPORT
 		ends_with(file, ".TiVo") ||
 #endif
@@ -417,6 +424,7 @@
 		ends_with(file, ".mp4") || ends_with(file, ".m4p")  ||
 		ends_with(file, ".wav") || ends_with(file, ".ogg")  ||
 		ends_with(file, ".pcm") || ends_with(file, ".3gp")  ||
+		ends_with(file, ".pcm") || ends_with(file, ".ape")  ||
 		ends_with(file, ".dsf") || ends_with(file, ".dff"));
 }
 
