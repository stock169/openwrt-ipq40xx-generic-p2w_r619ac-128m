
name: CoreELEC Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/stock169/CoreELEC
  REPO_BRANCH: coreelec-22
  CONFIG_FILE: linux.aarch64.conf
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential make gcc git python3 dwarves xfonts-utils bash bc bzip2 diffutils gawk gperf gzip file patchutils lzop patch perl rdfind rsync sed tar unzip xz-utils zip zstd libparse-yapp-perl libjson-perl libncurses5-dev libc6-dev
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH CoreELEC
        ln -sf /workdir/CoreELEC $GITHUB_WORKSPACE/CoreELEC

    - name: Load custom feeds
      run: |
 #      [ -e $FEEDS_CONF ] && mv $FEEDS_CONF CoreELEC/projects/Amlogic-ce/devices/Amlogic-no/linux/linux.aarch64.conf
 #      chmod +x $DIY_P1_SH
 #      cd CoreELEC
 #      $GITHUB_WORKSPACE/$DIY_P1_SH

 
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files CoreELEC/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE CoreELEC/projects/Amlogic-ce/devices/Amlogic-no/linux/linux.aarch64.conf
        
    - name: Compile the firmware
      id: compile
      run: |
        cd CoreELEC
        make image
 #       echo -e "$(nproc) thread compile"
 #       make -j$(nproc) || make -j1 || make -j1 V=s
 #       grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
 #       [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
 #       echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        path: CoreELEC/target

 
